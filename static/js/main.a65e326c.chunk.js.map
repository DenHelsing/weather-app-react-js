{"version":3,"sources":["styles/global-styles.js","location-input/location-input-styles.js","location-input/location-input.js","header/header-styles.js","header/header.js","main-section/main-section-styles.js","main-section/main-section.js","todays-weather-card/todays-weather-card-styles.js","todays-weather-card/todays-weather-card.js","current-weather-card/current-weather-card-styles.js","current-weather-item/current-weather-item-styles.js","current-weather-item/current-weather-item.js","current-weather-card/current-weather-card.js","daily-weather-card/daily-weather-card-styles.js","daily-weather-card/daily-weather-card.js","precip-probability/precip-probability.js","precip-probability/precip-probability-styles.js","week-weather/week-weather.js","week-weather/week-weather-styles.js","body/body-styles.js","body/body.js","App/App.js","serviceWorker.js","index.js"],"names":["flexRow","css","flexColumn","flexColumnReverse","SubTitle","styled","p","CardStyles","Button","button","Container","section","CityInputForm","form","CityInput","input","DetectLocationButton","LocationInput","cityInputRef","useRef","useEffect","current","focus","console","log","type","placeholder","ref","header","Title","h1","LeftBlock","div","RightBlock","Header","className","article","LabelWrapper","ParallaxBackgroundImage","FixedNavbar","paragraphTemplate","Temperature","Cloudness","Location","labelsParallaxData","start","end","properties","startValue","endValue","property","bgParallaxData","MainSection","useState","showFixedNavbar","setShowFixedNavbar","window","pageYOffset","turnOnNavbar","Fragment","as","Plx","parallaxData","onPlxStart","onPlxEnd","span","SmallLabel","MiddleLabel","TemperatureBlock","SaveLocation","TodaysWeatherCard","style","display","ItemsBlock","Text","Label","Value","Metrics","CurrentWeatherItem","label","value","metrics","icon","CurrentWeatherCard","size","Link","data","i","push","y","Math","random","toFixed","x","formatter","DailyWeatherCard","width","height","margin","top","left","right","bottom","dataKey","stroke","dot","fill","r","offset","position","showHours","num","PrecipProbability","tickFormatter","z","m","WeekWeather","strokeWidth","Body","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a65e326c.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst flexRow = css`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nconst flexRowReverse = css`\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n`;\r\n\r\nconst flexColumn = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nconst flexColumnReverse = css`\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n`;\r\nconst SubTitle = styled.p`\r\n    color: #2b2b2b;\r\n    font-size: 1.5em;\r\n    margin: 0;\r\n    display: flex;\r\n    /* align-items: center; */\r\n    justify-content: center;\r\n`;\r\n\r\nconst CardStyles = css`\r\n    border-radius: 5px;\r\n    background-color: white;\r\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12),\r\n        0 3px 1px -2px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: transparent;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    height: 30px;\r\n    border: none;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    margin: 0 7px;\r\n    cursor: pointer;\r\n    transition: 0.3s all ease;\r\n    outline: none;\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n    }\r\n`;\r\n\r\nexport {\r\n    flexRow,\r\n    flexColumn,\r\n    flexRowReverse,\r\n    flexColumnReverse,\r\n    SubTitle,\r\n    CardStyles,\r\n    Button\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Button } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.section`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nconst CityInputForm = styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nconst CityInput = styled.input`\r\n    width: 300px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    transition: 0.5s all ease;\r\n    padding: 10px;\r\n    &:focus {\r\n        background-color: rgba(255, 255, 255, 0.7);\r\n        outline: none;\r\n    }\r\n    &:placeholder {\r\n    }\r\n`;\r\n\r\nconst SubmitLocationButton = styled(Button)``;\r\nconst DetectLocationButton = styled(Button)`\r\n    font-size: 20px;\r\n`;\r\n\r\nexport {\r\n    Container,\r\n    CityInputForm,\r\n    CityInput,\r\n    SubmitLocationButton,\r\n    DetectLocationButton\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { IoMdCheckmarkCircleOutline } from \"react-icons/io\";\r\nimport { MdMyLocation } from \"react-icons/md\";\r\n\r\nimport { Button } from \"../styles/global-styles\";\r\n\r\nimport {\r\n    Container,\r\n    CityInputForm,\r\n    CityInput,\r\n    SubmitLocationButton,\r\n    DetectLocationButton\r\n} from \"./location-input-styles\";\r\n\r\nexport const LocationInput = () => {\r\n    const cityInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        cityInputRef.current.focus();\r\n        console.log(\"object\");\r\n        // return () => {\r\n        //     cleanup\r\n        // };\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <CityInputForm>\r\n                <CityInput\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your city here\"\r\n                    ref={cityInputRef}\r\n                />\r\n                <Button type=\"submit\">\r\n                    <IoMdCheckmarkCircleOutline />\r\n                </Button>\r\n            </CityInputForm>\r\n            <DetectLocationButton>\r\n                <MdMyLocation />\r\n                <span> </span>\r\n                Detect your location\r\n            </DetectLocationButton>\r\n        </Container>\r\n    );\r\n};\r\n","import { flexRow, flexColumn } from \"../styles/global-styles\";\r\n\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Container = styled.header`\r\n    ${flexRow}\r\n    /* background-color: rgb(163, 123, 123); */\r\n        background:transparent;\r\n    height: 60px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index: 2;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 0;\r\n    font-weight: normal;\r\n    font-size: 32px;\r\n    color: white;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LeftBlock = styled.div`\r\n    ${flexRow}\r\n`;\r\nconst RightBlock = styled.div`\r\n    ${flexRow}\r\n`;\r\n\r\nexport { Container, Title, RightBlock, LeftBlock };\r\n","import React from \"react\";\r\n\r\nimport { LocationInput } from \"../location-input/location-input\";\r\n\r\nimport { IoMdMenu, IoMdSettings } from \"react-icons/io\";\r\n\r\nimport { Button } from \"../styles/global-styles\";\r\n\r\nimport { Container, Title, RightBlock, LeftBlock } from \"./header-styles.js\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <Container>\r\n            <LeftBlock>\r\n                <Button className=\"show-menu\">\r\n                    <IoMdMenu />\r\n                </Button>\r\n                <Title>myWEATHER</Title>\r\n            </LeftBlock>\r\n            <LocationInput />\r\n            <RightBlock>\r\n                <Button>Log in</Button>\r\n                <Button>Sign up</Button>\r\n                <Button>\r\n                    <IoMdSettings />\r\n                </Button>\r\n                <Button>EN</Button>\r\n            </RightBlock>\r\n        </Container>\r\n    );\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { flexColumnReverse } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    position: relative;\r\n    ${flexColumnReverse}\r\n    /* justify-content:start; */\r\n    height: 634px;\r\n    width: 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n    ${flexColumnReverse}\r\n    justify-content:start;\r\n    margin: 40px;\r\n`;\r\n\r\nconst ParallaxBackgroundImage = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0px;\r\n    min-height: 634px;\r\n    overflow: hidden;\r\n    background-position: center center;\r\n    /* background-image: url(\"https://d2idu5mmj5r5g3.cloudfront.net/photos_wp/cKqkdmn02p86440.webp\"); */\r\n    background-image: url(\"https://d2idu5mmj5r5g3.cloudfront.net/photos_wp/Mv2tfOJOWi70133.webp\");\r\n    overflow-x: hidden;\r\n    z-index: -1;\r\n`;\r\n\r\nconst FixedNavbar = styled.div`\r\n    position: fixed;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 60px;\r\n    top: 0px;\r\n    background-image: url(\"https://d2idu5mmj5r5g3.cloudfront.net/photos_wp/Mv2tfOJOWi70133.webp\");\r\n    background-position: center center;\r\n    background-position-y: 60%;\r\n    overflow-x: hidden;\r\n    z-index: 1;\r\n`;\r\n\r\nconst paragraphTemplate = styled.p`\r\n    color: white;\r\n    display: inline-block;\r\n    text-align: left;\r\n    font-weight: normal;\r\n    margin: 5px 0;\r\n`;\r\n\r\nconst Temperature = styled(paragraphTemplate)`\r\n    font-size: 8em;\r\n`;\r\nconst Cloudness = styled(paragraphTemplate)`\r\n    font-size: 3em;\r\n`;\r\nconst Location = styled(paragraphTemplate)`\r\n    font-size: 2em;\r\n`;\r\n\r\nexport {\r\n    Container,\r\n    Temperature,\r\n    Cloudness,\r\n    Location,\r\n    ParallaxBackgroundImage,\r\n    FixedNavbar,\r\n    LabelWrapper\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\r\n\r\nimport Plx from \"react-plx\";\r\n\r\nimport {\r\n    Container,\r\n    Temperature,\r\n    Cloudness,\r\n    Location,\r\n    ParallaxBackgroundImage,\r\n    FixedNavbar,\r\n    LabelWrapper\r\n} from \"./main-section-styles\";\r\n\r\nconst labelsParallaxData = [\r\n    {\r\n        start: 0,\r\n        end: 575,\r\n        properties: [\r\n            {\r\n                startValue: 1,\r\n                endValue: 0,\r\n                property: \"opacity\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst bgParallaxData = [\r\n    {\r\n        start: 0,\r\n        end: 575,\r\n        properties: [\r\n            {\r\n                startValue: 0,\r\n                endValue: 200,\r\n                property: \"translateY\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const MainSection = () => {\r\n    const [showFixedNavbar, setShowFixedNavbar] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.pageYOffset > 450) {\r\n            turnOnNavbar();\r\n        }\r\n    }, []);\r\n\r\n    const turnOnNavbar = () => {\r\n        setShowFixedNavbar(true);\r\n    };\r\n    const turnOffNavbar = () => {\r\n        setShowFixedNavbar(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {showFixedNavbar ? <FixedNavbar /> : null}\r\n            <Container>\r\n                <ParallaxBackgroundImage\r\n                    as={Plx}\r\n                    parallaxData={bgParallaxData}\r\n                    onPlxStart={turnOffNavbar}\r\n                    onPlxEnd={turnOnNavbar}\r\n                />\r\n                <LabelWrapper as={Plx} parallaxData={labelsParallaxData}>\r\n                    <Location>Today's weather in Kyiv</Location>\r\n                    <Cloudness>icon Overcast</Cloudness>\r\n                    <Temperature>10°C</Temperature>\r\n                </LabelWrapper>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { flexColumn, flexRow, CardStyles } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    ${flexColumn}\r\n    ${CardStyles}\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    align-self: stretch;\r\n    box-sizing: border-box;\r\n    padding: 1% 0;\r\n    color: #2b2b2b;\r\n    width: 32%;\r\n    /* height: 25vw; */\r\n    /* height: 370px; */\r\n    /* margin: 0 1% 1% 0; */\r\n`;\r\n\r\nconst Temperature = styled.span`\r\n    font-size: 3.5em;\r\n    margin: 0 5px;\r\n`;\r\n\r\nconst SmallLabel = styled.span`\r\n    font-size: 1em;\r\n    /* margin: 30px; */\r\n`;\r\n\r\nconst MiddleLabel = styled.span`\r\n    font-size: 1.2em;\r\n    margin: 5px;\r\n`;\r\n\r\nconst TemperatureBlock = styled.div`\r\n    ${flexRow}\r\n    align-items: baseline;\r\n    margin: 5px;\r\n`;\r\n\r\nconst SaveLocation = styled.div`\r\n    ${flexRow}\r\n    /* margin-top: 15px; */\r\n    cursor: pointer;\r\n    font-size: 2em;\r\n    color: rgb(65, 152, 240);\r\n`;\r\n\r\nexport {\r\n    Container,\r\n    Temperature,\r\n    SmallLabel,\r\n    MiddleLabel,\r\n    TemperatureBlock,\r\n    SaveLocation\r\n};\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    SmallLabel,\r\n    MiddleLabel,\r\n    Temperature,\r\n    TemperatureBlock,\r\n    SaveLocation\r\n} from \"./todays-weather-card-styles\";\r\n\r\nimport { SubTitle, flexColumn } from \"../styles/global-styles\";\r\n\r\nimport { IoIosStar } from \"react-icons/io\";\r\n\r\nexport const TodaysWeatherCard = () => {\r\n    return (\r\n        <Container>\r\n            <SubTitle>Today's weather</SubTitle>\r\n            <TemperatureBlock>\r\n                <SmallLabel>Max</SmallLabel>\r\n                <Temperature>13°</Temperature>\r\n                <SmallLabel>Min</SmallLabel>\r\n                <Temperature>8°</Temperature>\r\n            </TemperatureBlock>\r\n            Icon\r\n            <MiddleLabel>Overcast</MiddleLabel>\r\n            <div style={{ display: \"flex\" }}>\r\n                <SubTitle>Kyiv</SubTitle>\r\n                <SaveLocation>\r\n                    <IoIosStar />\r\n                </SaveLocation>\r\n            </div>\r\n            <MiddleLabel>Fri, Mar 6, 15:21</MiddleLabel>\r\n        </Container>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { flexRow, flexColumn, CardStyles } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    ${flexColumn}\r\n    ${CardStyles}\r\n    width: 66%;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    padding: 1% 1%;\r\n    padding-top: 5px;\r\n    color: #2b2b2b;\r\n`;\r\n\r\nconst ItemsBlock = styled.div`\r\n    width: 100%;\r\n    ${flexRow}\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    /* align-items: center; */\r\n`;\r\n\r\nexport { Container, ItemsBlock };\r\n","import styled from \"styled-components\";\r\n\r\nimport { flexColumn } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.section`\r\n    ${flexColumn}\r\n    box-sizing : border-box;\r\n    width: 31%;\r\n    max-width: 150px;\r\n    margin: auto;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: #2b2b2b;\r\n    margin: 0px;\r\n`;\r\n\r\nconst Label = styled(Text)`\r\n    font-size: 1em;\r\n`;\r\n\r\nconst Value = styled(Text)`\r\n    font-size: 1.6em;\r\n`;\r\n\r\nconst Metrics = styled(Text)`\r\n    font-size: 0.8em;\r\n`;\r\n\r\nexport { Container, Label, Value, Metrics };\r\n","import React from \"react\";\r\n\r\nimport {\r\n    Container,\r\n    Label,\r\n    Value,\r\n    Metrics\r\n} from \"./current-weather-item-styles\";\r\n\r\nexport const CurrentWeatherItem = ({ label, value, metrics, icon }) => {\r\n    return (\r\n        <Container>\r\n            <Label>{icon}</Label>\r\n            <Label>{label}</Label>\r\n            <div>\r\n                <Value>{value}</Value>\r\n                <Metrics>{metrics}</Metrics>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container, ItemsBlock } from \"./current-weather-card-styles\";\r\nimport { SubTitle } from \"../styles/global-styles\";\r\n\r\nimport { CurrentWeatherItem } from \"../current-weather-item/current-weather-item\";\r\n\r\nimport { WiThermometer, WiHumidity, WiBarometer } from \"react-icons/wi\";\r\nimport { GiGroupedDrops, GiDew, GiWindsock } from \"react-icons/gi\";\r\nimport { AiFillCloud } from \"react-icons/ai\";\r\nimport { FiSun } from \"react-icons/fi\";\r\nimport { MdVisibility } from \"react-icons/md\";\r\n\r\nexport default function CurrentWeatherCard() {\r\n    const size = 35;\r\n    return (\r\n        <Container>\r\n            <SubTitle>Current Weather in Kyiv</SubTitle>\r\n            <ItemsBlock>\r\n                <CurrentWeatherItem\r\n                    label=\"Apparent Temp.\"\r\n                    icon={<WiThermometer size={size} />}\r\n                    value=\"12\"\r\n                    metrics=\"°C\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Precip Intensity\"\r\n                    value=\"0\"\r\n                    icon={<GiGroupedDrops size={size} />}\r\n                    metrics=\"mm/h\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Cloud cover\"\r\n                    icon={<AiFillCloud size={size} />}\r\n                    value=\"14\"\r\n                    metrics=\"%\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Humidity\"\r\n                    icon={<WiHumidity size={size} />}\r\n                    value=\"15\"\r\n                    metrics=\"%\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Dew point\"\r\n                    icon={<GiDew size={size} />}\r\n                    value=\"12\"\r\n                    metrics=\"°C\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Pressure\"\r\n                    icon={<WiBarometer size={size} />}\r\n                    value=\"1000\"\r\n                    metrics=\"hPa\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Wind\"\r\n                    icon={<GiWindsock size={size} />}\r\n                    value=\"10\"\r\n                    metrics=\"m/s\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"UV index\"\r\n                    icon={<FiSun size={size} />}\r\n                    value=\"1\"\r\n                    metrics=\"/11\"\r\n                />\r\n                <CurrentWeatherItem\r\n                    label=\"Visibility\"\r\n                    icon={<MdVisibility size={size} />}\r\n                    value=\"12\"\r\n                    metrics=\"km\"\r\n                />\r\n            </ItemsBlock>\r\n        </Container>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { CardStyles, flexColumn } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    ${CardStyles}\r\n    ${flexColumn}\r\n    width: 100%;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst Link = styled.span`\r\n    cursor: pointer;\r\n    font-size: 80%;\r\n    color: rgb(44, 160, 206);\r\n    margin: 0;\r\n`;\r\n\r\nexport { Container, Link };\r\n","import React from \"react\";\r\n\r\nimport { Container, Link } from \"./daily-weather-card-styles\";\r\n\r\nimport { FaCloud, FaSun } from \"react-icons/fa\";\r\n\r\nimport { SubTitle } from \"../styles/global-styles\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    CartesianAxis,\r\n    CartesianGrid,\r\n    LabelList,\r\n    Label\r\n} from \"recharts\";\r\n\r\nconst PlotContainer = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst data = [];\r\nconst iconLabels = [];\r\n\r\nfor (let i = 0; i < 24; i++) {\r\n    data.push({ y: Math.random().toFixed(1), x: i + 1 });\r\n    // iconLabels.push(i % 2 === 0 ? <FaCloud /> : <FaSun />);\r\n    // iconLabels.push(i - 10);\r\n}\r\n\r\nconst formatter = label => label + \"°\";\r\n\r\nexport const DailyWeatherCard = () => {\r\n    return (\r\n        <Container>\r\n            <SubTitle>\r\n                24-hour weather in Kyiv <Link>See more</Link>\r\n            </SubTitle>\r\n            <LineChart\r\n                width={1345}\r\n                height={240}\r\n                margin={{ top: 25, left: 15, right: 15, bottom: 15 }}\r\n                data={data}\r\n            >\r\n                <XAxis\r\n                // minTickGap={0}\r\n                // interval={0}\r\n                // domain={[0, 25]}\r\n                // ticks={iconLabels}\r\n                // tickFormatter={lab => lab}\r\n                />\r\n                {/* <YAxis /> */}\r\n                <Tooltip />\r\n                <CartesianGrid />\r\n                <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"y\"\r\n                    stroke=\"orange\"\r\n                    dot={{ fill: \"orange\", r: 7 }}\r\n                >\r\n                    <LabelList\r\n                        dataKey=\"y\"\r\n                        formatter={formatter}\r\n                        offset={10}\r\n                        position=\"top\"\r\n                    />\r\n                </Line>\r\n            </LineChart>\r\n        </Container>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"./precip-probability-styles\";\r\n\r\nimport { SubTitle } from \"../styles/global-styles\";\r\n\r\nimport {\r\n    BarChart,\r\n    XAxis,\r\n    YAxis,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    CartesianGrid,\r\n    Bar\r\n} from \"recharts\";\r\n\r\nconst data = [];\r\nconst iconLabels = [];\r\n\r\nfor (let i = 0; i < 24; i++) {\r\n    data.push({ y: Math.random(), x: i + 1 });\r\n    // iconLabels.push(i % 2 === 0 ? <FaCloud /> : <FaSun />);\r\n    // iconLabels.push(i - 10);\r\n}\r\n\r\nconst showHours = num => num + \":00\";\r\n\r\nexport const PrecipProbability = () => {\r\n    return (\r\n        <Container>\r\n            <SubTitle>Precip Probability % in Kyiv</SubTitle>\r\n            <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                <BarChart\r\n                    data={data}\r\n                    margin={{ top: 0, right: 20, bottom: -10, left: -20 }}\r\n                >\r\n                    <Tooltip />\r\n                    <CartesianGrid />\r\n                    <YAxis dataKey=\"y\" />\r\n                    <XAxis dataKey=\"x\" tickFormatter={showHours} />\r\n                    <Bar dataKey=\"y\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </Container>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { CardStyles } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    ${CardStyles}\r\n    width: 54%;\r\n    height: 350px;\r\n`;\r\n\r\nexport { Container };\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"./week-weather-styles\";\r\n\r\nimport { SubTitle } from \"../styles/global-styles\";\r\n\r\nimport {\r\n    ComposedChart,\r\n    LineChart,\r\n    BarChart,\r\n    XAxis,\r\n    YAxis,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    CartesianGrid,\r\n    Bar,\r\n    Line\r\n} from \"recharts\";\r\n\r\nconst data = [];\r\n\r\nfor (let i = 0; i < 7; i++) {\r\n    data.push({\r\n        y: Math.random().toFixed(1),\r\n        z: Math.random().toFixed(1),\r\n        m: Math.random().toFixed(1),\r\n        x: i + 1\r\n    });\r\n    // iconLabels.push(i % 2 === 0 ? <FaCloud /> : <FaSun />);\r\n    // iconLabels.push(i - 10);\r\n}\r\n\r\nexport const WeekWeather = () => {\r\n    return (\r\n        <Container>\r\n            <SubTitle>1 week weather in Kyiv</SubTitle>\r\n            <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n                <ComposedChart\r\n                    data={data}\r\n                    margin={{ top: 10, right: 20, bottom: -10, left: 0 }}\r\n                >\r\n                    <CartesianGrid />\r\n                    <Bar dataKey=\"y\" fill=\"#a8e1ff\" />\r\n                    <Line dataKey=\"z\" strokeWidth={3} stroke=\"#782390\" />\r\n                    <Line dataKey=\"m\" strokeWidth={3} stroke=\"#34abeb\" />\r\n                    <XAxis dataKey=\"x\" />\r\n                    <Tooltip />\r\n                </ComposedChart>\r\n            </ResponsiveContainer>\r\n        </Container>\r\n    );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { CardStyles } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.article`\r\n    ${CardStyles}\r\n    width: 44%;\r\n    height: 350px;\r\n`;\r\n\r\nexport { Container };\r\n","import styled from \"styled-components\";\r\n\r\nimport { flexRow } from \"../styles/global-styles\";\r\n\r\nconst Container = styled.section`\r\n    ${flexRow}\r\n    flex-wrap : wrap;\r\n    flex: 1;\r\n    padding: 15px 70px 0px 70px;\r\n    background-color: #f0f0f0;\r\n    & * {\r\n        margin: 0.5%;\r\n    }\r\n`;\r\n\r\nexport { Container };\r\n","import React from \"react\";\r\n\r\nimport { TodaysWeatherCard } from \"../todays-weather-card/todays-weather-card\";\r\nimport CurrentWeatherCard from \"../current-weather-card/current-weather-card\";\r\nimport { DailyWeatherCard } from \"../daily-weather-card/daily-weather-card\";\r\nimport { PrecipProbability } from \"../precip-probability/precip-probability\";\r\nimport { WeekWeather } from \"../week-weather/week-weather\";\r\n\r\nimport { Container } from \"./body-styles\";\r\n\r\nexport const Body = () => {\r\n    return (\r\n        <Container>\r\n            <TodaysWeatherCard />\r\n            <CurrentWeatherCard />\r\n            <DailyWeatherCard />\r\n            <PrecipProbability />\r\n            <WeekWeather />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n            <TodaysWeatherCard />\r\n        </Container>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport { Header } from \"../header/header\";\r\nimport { MainSection } from \"../main-section/main-section\";\r\nimport { Body } from \"../body/body\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <MainSection />\r\n            <Body />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}